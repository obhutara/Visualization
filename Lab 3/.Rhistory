cov<-function(X){
stopifnot(is.data.frame(X))
a<-NA
browser()
for(i in names(X)){
a[i]<-lapply(X[i],function(i){sd(i)/mean(i)})
}
return(a[i])
}
data(iris)
cov(X = iris[1:4])
View(a)
View(a)
data(iris)
cov(X = iris[1:4])
View(a)
cov<-function(X){
stopifnot(is.data.frame(X))
browser()
for(i in names(X)){
a[i]<-lapply(X[i],function(i){sd(i)/mean(i)})
}
return(a[i])
}
data(iris)
cov(X = iris[1:4])
data(iris)
cov(X = iris[1:4])
cov<-function(X){
stopifnot(is.data.frame(X))
browser()
a<-list()
for(i in names(X)){
a[i]<-lapply(X[i],function(i){sd(i)/mean(i)})
}
return(a[i])
}
data(iris)
cov(X = iris[1:4])
View(a)
cov<-function(X){
stopifnot(is.data.frame(X))
browser()
a<-list()
for(i in names(X)){
a[i]<-lapply(X[i],function(i){sd(i)/mean(i)})
}
return(a[])
}
data(iris)
cov(X = iris[1:4])
stopifnot(is.data.frame(X))
browser()
a<-list()
for(i in names(X)){
a[i]<-lapply(X[i],function(i){sd(i)/mean(i)})
}
return(unlist(a))
}
cov<-function(X){
stopifnot(is.data.frame(X))
browser()
a<-list()
for(i in names(X)){
a[i]<-lapply(X[i],function(i){sd(i)/mean(i)})
}
return(unlist(a))
}
data(iris)
cov(X = iris[1:4])
moment<-function(i){
stopifnot(is.numeric(i)&&i>0)
function(j){
mom<-sum((j-mean(j))^i)/length(j)
return(mom)
}
}
m1 <- moment(i=1)
m2 <- moment(i=2)
m1(1:100)
#[1] 0
m2(1:100)
mark_my_assignment()
cov<-function(X){
stopifnot(is.data.frame(X))
a<-list()
for(i in names(X)){
a[i]<-lapply(X[i],function(i){sd(i)/mean(i)})
}
return(unlist(a))
}
moment<-function(i){
stopifnot(is.numeric(i)&&i>0)
browser()
function(j){
mom<-sum((j-mean(j))^i)/length(j)
return(mom)
}
}
m1 <- moment(i=1)
m2 <- moment(i=2)
m1(1:100)
cov<-function(X){
stopifnot(is.data.frame(X))
a<-list()
for(i in names(X)){
a[i]<-lapply(X[i],function(i){sd(i)/mean(i)})
}
return(unlist(a))
}
View(cov)
cov<-function(X){
stopifnot(is.data.frame(X))
a<-list()
for(i in names(X)){
a[i]<-lapply(X[i],function(i){sd(i)/mean(i)})
}
return(unlist(a))
}
cov(X = iris[1:4])
moment<-function(i){
stopifnot(is.numeric(i)&&i>0)
browser()
function(j){
mom<-sum((j-mean(j))^i)/length(j)
return(mom)
}
}
m1 <- moment(i=1)
m2 <- moment(i=2)
m1(1:100)
#1.7.1
moment<-function(i){
stopifnot(is.numeric(i)&&i>0)
browser()
function(j){
mom<-sum((j-mean(j))^i)/length(j)
return(mom)
}
}
m1 <- moment(i=1)
m2 <- moment(i=2)
m1(1:100)
#[1] 0
m2(1:100)
#[1] 833.25
#1.7.2
mark_my_assignment()
moment<-function(i){
stopifnot(is.numeric(i)&&i>0)
function(j){
mom<-sum((j-mean(j))^i)/length(j)
return(mom)
}
}
moment<-function(i){
stopifnot(is.numeric(i)&&i>0)
function(j){
mom<-sum((j-mean(j))^i)/length(j)
return(mom)
}
}
mark_my_assignment()
repeat_find_cumsum<-function(x,find_sum){
stopifnot(is.vector(x)&&!is.numeric(find_sum))
cs<- cumsum(x)
i<-1
repeat{
i<-i+1
if(cs[i]>=find_sum || i>=length(x)) break
}
return(cs[[i]])
}
repeat_find_cumsum(x=1:100, find_sum=500)
repeat_find_cumsum<-function(x,find_sum){
stopifnot(is.vector(x)&&is.numeric(find_sum))
cs<- cumsum(x)
i<-1
repeat{
i<-i+1
if(cs[i]>=find_sum || i>=length(x)) break
}
return(cs[[i]])
}
repeat_find_cumsum(x=1:100, find_sum=500)
mark_my_assignment()
repeat_find_cumsum<-function(x,find_sum){
stopifnot(is.vector(x)&&is.numeric(find_sum))
cs<- cumsum(x)
i<-NA
repeat{
i<-i+1
if(cs[i]>=find_sum || i>=length(x)) break
}
return(cs[[i]])
}
repeat_find_cumsum(x=1:100, find_sum=500)
repeat_find_cumsum<-function(x,find_sum){
stopifnot(is.vector(x)&&is.numeric(find_sum))
cs<- cumsum(x)
i<-NULL
repeat{
i<-i+1
if(cs[i]>=find_sum || i>=length(x)) break
}
return(cs[[i]])
}
repeat_find_cumsum(x=1:100, find_sum=500)
repeat_find_cumsum<-function(x,find_sum){
stopifnot(is.vector(x)&&is.numeric(find_sum))
cs<- cumsum(x)
i<-0
repeat{
i<-i+1
if(cs[i]>=find_sum || i>=length(x)) break
}
return(cs[[i]])
}
repeat_find_cumsum(x=1:100, find_sum=500)
mark_my_assignment()
repeat_my_moving_median<-function(x,n)
{
is.scalar1 <- function(n) is.atomic(n) && length(n) == 1L
stopifnot(is.scalar1(n) && is.vector(x))
m<-NA
i<-1
repeat{
m[i]<-median(x[i:(i+n)])
i<-i+1
if(i==length(x)-n) break
}
return(m)
}
repeat_my_moving_median(x = 1:10, n=2)
mark_my_assignment()
repeat_my_moving_median<-function(x,n,...)
{
is.scalar1 <- function(n) is.atomic(n) && length(n) == 1L
stopifnot(is.scalar1(n) && is.vector(x))
m<-NA
i<-1
repeat{
m[i]<-median(x[i:(i+n)])
i<-i+1
if(i==length(x)-n) break
}
return(m)
}
repeat_my_moving_median(x = 1:10, n=2)
mark_my_assignment()
repeat_my_moving_median<-function(x,n,...)
{
is.scalar1 <- function(n) is.atomic(n) && length(n) == 1L
stopifnot(is.scalar1(n) && is.vector(x))
m<-NA
i<-1
repeat{
m[i]<-median(x[i:(i+n)],...)
i<-i+1
if(i==length(x)-n) break
}
return(m)
}
repeat_my_moving_median(x = 1:10, n=2)
mark_my_assignment()
repeat_my_moving_median<-function(x,n,...)
{
is.scalar1 <- function(n) is.atomic(n) && length(n) == 1L
stopifnot(is.scalar1(n) && is.vector(x)&&n>0)
m<-vector()
i<-1
repeat{
m[i]<-median(x[i:(i+n)],...)
i<-i+1
if(i==length(x)-n) break
}
return(m)
}
repeat_my_moving_median(x = 1:10, n=2)
mark_my_assignment()
repeat_my_moving_median<-function(x,n,...)
{
is.scalar1 <- function(n) is.atomic(n) && length(n) == 1L
stopifnot(is.scalar1(n) && is.vector(x)&&n>0)
m<-vector()
i<-1
repeat{
m[i]<-median(x[i:(i+n)],...)
i<-i+1
if(i==length(x)-n) break
}
m
}
repeat_my_moving_median(x = 1:10, n=2)
mark_my_assignment()
repeat_my_moving_median<-function(x,n,...)
{
is.scalar1 <- function(n) is.atomic(n) && length(n) == 1L
stopifnot(is.scalar1(n) && is.vector(x)&&n>0)
m<-vector()
i<-1
repeat{
m[i]<-median(x[i:(i+n)],...)
i<-i+1
if(i>length(x)-n) break
}
m
}
repeat_my_moving_median(x = 1:10, n=2)
repeat_my_moving_median(x = 5:15, n=4)
repeat_my_moving_median(x = c(5,1,2,NA,2,5,6,8,9,9), n=2)
mark_my_assignment()
repeat_find_cumsum<-function(x,find_sum){
stopifnot(is.numeric(x)&&is.vector(x)&&is.numeric(find_sum))
cs<- cumsum(x)
i<-0
repeat{
i<-i+1
if(cs[i]>=find_sum || i>=length(x)) break
}
return(cs[[i]])
}
repeat_find_cumsum(x=1:100, find_sum=500)
repeat_find_cumsum(x=1:10, find_sum=1000)
mark_my_assignment()
repeat_find_cumsum<-function(x,find_sum){
stopifnot(is.numeric(x)&&is.vector(x)&&is.numeric(find_sum))
cs<- cumsum(x)
i<-as.numeric(0)
repeat{
i<-i+1
if(cs[i]>=find_sum || i>=length(x)) break
}
return(cs[[i]])
}
repeat_find_cumsum(x=1:100, find_sum=500)
repeat_find_cumsum(x=1:10, find_sum=1000)
mark_my_assignment()
repeat_find_cumsum<-function(x,find_sum){
stopifnot(is.numeric(x)&&is.vector(x)&&is.numeric(find_sum))
cs<- cumsum(x)
i<-as.numeric(0)
repeat{
i<-i+1
if(cs[i]>=find_sum || i>=length(x)) break
}
return(cs[i])
}
repeat_find_cumsum(x=1:100, find_sum=500)
repeat_find_cumsum(x=1:10, find_sum=1000)
mark_my_assignment()
repeat_find_cumsum<-function(x,find_sum){
stopifnot(is.numeric(x)&&is.vector(x)&&is.numeric(find_sum))
cs<- 0
i<-as.numeric(1)
repeat{
cs<-cs+x[i]
i<-i+1
if(cs[i]>=find_sum || i>=length(x)) break
}
return(cs[i])
}
repeat_find_cumsum(x=1:100, find_sum=500)
repeat_find_cumsum(x=1:10, find_sum=1000)
repeat_find_cumsum<-function(x,find_sum){
stopifnot(is.numeric(x)&&is.vector(x)&&is.numeric(find_sum))
cs<- 0
i<-1
repeat{
cs<-cs+x[i]
i<-i+1
if(cs[i]>=find_sum || i>=length(x)) break
}
return(cs[i])
}
repeat_find_cumsum(x=1:100, find_sum=500)
repeat_find_cumsum(x=1:10, find_sum=1000)
repeat_find_cumsum<-function(x,find_sum){
stopifnot(is.numeric(x)&&is.vector(x)&&is.numeric(find_sum))
cs<- 0
i<-1
repeat{
cs<-cs+x[i]
i<-i+1
if(cs>=find_sum || i>=length(x)) break
}
return(cs)
}
repeat_find_cumsum(x=1:100, find_sum=500)
repeat_find_cumsum(x=1:10, find_sum=1000)
repeat_find_cumsum<-function(x,find_sum){
stopifnot(is.numeric(x)&&is.vector(x)&&is.numeric(find_sum))
cs<- 0
i<-1
repeat{
cs<-cs+x[i]
i<-i+1
if(cs>=find_sum || i>length(x)) break
}
return(cs)
}
repeat_find_cumsum(x=1:100, find_sum=500)
repeat_find_cumsum(x=1:10, find_sum=1000)
mark_my_assignment()
tinytex::is_tinytex()
?read.csv
getwd()
library("knitr")
reservindia<-read.csv("C://Users//Omkar//Documents//reservedu.csv", header= TRUE, sep=",")
knitr::kable(reservindia,caption = 'Table 1: a table of the data reported in All India Survey on Higher Education (AISHE) report 2015-16 commissioned by the Department of Higher Education, Government of India'
)
reservindia<-read.csv("C://Users//Omkar//Documents//reservedu.csv", header= TRUE, sep=",")
knitr::kable(reservindia,caption = 'Table 1: a table of the data reported in All India Survey on Higher Education (AISHE) report 2015-16 commissioned by the Department of Higher Education, Government of India'
)
bball = read.xlsx("baseball-2016.xlsx", sheetName = "Sheet1", header = TRUE,
row.names = 1)
head(bball)
library(xlsx)
library(dplyr)
install.packages("xlxs")
install.packages("MASS")
library(MASS)
knitr::opts_chunk$set(echo = TRUE)
#Q2.4
rds<-readRDS("gadm36_SWE_1_sf.rds")
rownames(data2_rshaped)=data2_rshaped$Region
#Q2.1
data2 = read.csv("SwedishHousehold.csv", skip = 2, col.names = c("Region", "Age", "Income"))
head(data2)
my_strip <- function(region) {
region = strsplit(as.character(region), " ")[[1]][2]
}
data2$Region = lapply(data2$Region, my_strip)
data2$Region = as.character(data2$Region)
levels(data2$Age) = c("Young", "Adult", "Senior")
data2_rshaped = reshape(data2, idvar = "Region", timevar = "Age", direction = "wide", v.names = NULL)
names(data2_rshaped) = c("Region", "Youth","Adult","Senior")
head(data2_rshaped)
#Q2.2
plot_ly(data2, x=~factor(Age), y=~Income, type="violin",
split=~factor(Age), box=list(visible=T)) %>%
layout(title ="Violin plot for Each age group")
library(dplyr)
library(plotly)
library(akima)
library(sf)
library(stringi)
library(MASS)
#Q2.1
data2 = read.csv("SwedishHousehold.csv", skip = 2, col.names = c("Region", "Age", "Income"))
head(data2)
my_strip <- function(region) {
region = strsplit(as.character(region), " ")[[1]][2]
}
data2$Region = lapply(data2$Region, my_strip)
data2$Region = as.character(data2$Region)
levels(data2$Age) = c("Young", "Adult", "Senior")
data2_rshaped = reshape(data2, idvar = "Region", timevar = "Age", direction = "wide", v.names = NULL)
names(data2_rshaped) = c("Region", "Youth","Adult","Senior")
head(data2_rshaped)
#Q2.2
plot_ly(data2, x=~factor(Age), y=~Income, type="violin",
split=~factor(Age), box=list(visible=T)) %>%
layout(title ="Violin plot for Each age group")
#Q2.3
attach(data2_rshaped)
s=interp(Senior,Youth,Adult, duplicate = "mean")
detach(data2_rshaped)
plot_ly(x=~s$x, y=~s$y, z=~s$z, type="surface")%>%
layout(title ="Surface Plot",scene = list(
xaxis = list(title = "Senior"),
yaxis = list(title = "Youth"),
zaxis = list(title = "Adult")
))
#Q2.4
rds<-readRDS("gadm36_SWE_1_sf.rds")
rownames(data2_rshaped)=data2_rshaped$Region
data2_rshaped["V?stra", 1] = "V?stra G?taland"
data2_rshaped["?rebro", 1] = "Orebro"
rownames(data2_rshaped)=data2_rshaped$Region
rds$Youth=data2_rshaped[rds$NAME_1, "Youth"]
rds$Adult=data2_rshaped[rds$NAME_1, "Adult"]
rds$Senior=data2_rshaped[rds$NAME_1, "Senior"]
p_youth<-plot_ly()%>%
add_sf(data=rds, split=~NAME_1, color=~Youth, showlegend=F, alpha=1)%>%
layout(title ="Choropleth map showing income for youth")
p_adults<-plot_ly()%>%
add_sf(data=rds, split=~NAME_1, color=~Adult, showlegend=F, alpha=1)%>%
layout(title ="Choropleth map showing income for adults")
p_youth
p_adults
getwd()
setwd("C:/Users/Omkar/Downloads/Lab3Vis")
knitr::opts_chunk$set(echo = TRUE)
mosq<-read.csv("aegypti_albopictus.csv",header= TRUE, sep = ",")
setwd("C:/Users/Omkar/Downloads/Lab3Vis")
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(plotly)
library(dplyr)
library(MASS)
library(akima)
library(stringi)
mosq<-read.csv("aegypti_albopictus.csv",header= TRUE, sep = ",")
head(mosq)
Sys.setenv('MAPBOX_TOKEN' = 'pk.eyJ1Ijoib2JodXRhcmEiLCJhIjoiY2ptYm9yczN1MDcwMzNwbnlqMTY0eDl2bCJ9.IIY_aDN7MAQ8U_sok4xDww')
p10 <- mosq %>% filter(YEAR=='2004') %>% plot_mapbox(lat = ~Y, lon = ~X,
color = ~VECTOR, mode = 'scattermapbox',hoverinfo='name')
p10
p11 <- mosq %>% filter(YEAR=='2013') %>% plot_mapbox(lat = ~Y, lon = ~X,
color = ~VECTOR, mode = 'scattermapbox',hoverinfo='name')
p11
